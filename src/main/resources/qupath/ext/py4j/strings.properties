Extension.name = QuPath Py4J extension
Extension.description = Connect QuPath to Python via Py4J
Extension.gatewayStarted = Py4J Gateway started
Extension.gatewayStopped = Py4J Gateway stopped
Extension.startGateway = Start Py4J Gateway
Extension.stopGateway = Stop Py4J Gateway
Extension.startGatewayDescription = Start a Py4J Gateway to communicate between QuPath and Python
Extension.gateway = Py4J Gateway

PreferencePane.name = Enable Py4J
PreferencePane.category = Py4J
PreferencePane.description = Enable Py4J to accept connections through the UI - this enables QuPath to communicate with Python.\nSee www.py4j.org for more info.

GatewayCreator.title = Py4J Gateway
GatewayCreator.description = Create a Py4J Gateway so Python programs can\n access QuPath through a local network socket.\nCheck out py4j.org for more details & security info.
GatewayCreator.port = Port
GatewayCreator.portDescription = Port number (integer), or leave blank to use the default Py4J port
GatewayCreator.token = Token
GatewayCreator.tokenPlaceholder = Authentication token (optional)
GatewayCreator.tokenDescription = Authentication token - if provided, this needs to be entered on the Python side
GatewayCreator.random = Random
GatewayCreator.randomExplanation = Generate a UUID to use as an authentication token
GatewayCreator.copy = Copy
GatewayCreator.copyExplanation = Copy authentication token to clipboard (to use in Python)
GatewayCreator.defaultPort = Default port ({0})
GatewayCreator.tokenCopied = Token copied to clipboard!